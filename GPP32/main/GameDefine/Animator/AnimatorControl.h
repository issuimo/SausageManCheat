#pragma once

#include "../../main.h"

struct AnimatorControl : II::MonoBehaviour {

	UnityResolve::UnityType::Transform* _myTransform;
	UnityResolve::UnityType::GameObject* _myGameObj;
	char roleDanceAnimation[0x00000C];
	char animatorParameters[0x000004];
	bool IsShowAnimatorControl;
	char IsShowAnimatorControl_[0x000003];
	UnityResolve::UnityType::Transform* TeamXCCOffest;
	UnityResolve::UnityType::Transform* EnemyXCCOffest;
	UnityResolve::UnityType::GameObject* vestParent;
	UnityResolve::UnityType::Transform* noobFishSlot;
	UnityResolve::UnityType::Transform* leftHand;
	UnityResolve::UnityType::Transform* rightHand;
	UnityResolve::UnityType::Transform* otherFireBox;
	char weaponSlots[0x000004];
	UnityResolve::UnityType::Transform* pistolSlot;
	bool isWeaponSlotToRole;
	char isWeaponSlotToRole_[0x000003];
	char weaponSlotParents[0x000004];
	char weaponSlotPos[0x000004];
	char weaponSlotRot[0x000004];
	UnityResolve::UnityType::Transform* backpack;
	UnityResolve::UnityType::Transform* FunctionalGarmentSlot;
	UnityResolve::UnityType::Transform* ParachuteSlot;
	UnityResolve::UnityType::Transform* fallowRotaP;
	UnityResolve::UnityType::Transform* Head;
	UnityResolve::UnityType::GameObject* headObj;
	UnityResolve::UnityType::Transform* Hip;
	UnityResolve::UnityType::Transform* Headring;
	UnityResolve::UnityType::Transform* SkinBody;
	UnityResolve::UnityType::Transform* SmallVest;
	UnityResolve::UnityType::Transform* RightFoot;
	UnityResolve::UnityType::Transform* LeftFoot;
	char speedlines[0x000004];
	char mHook[0x000004];
	UnityResolve::UnityType::GameObject* RoleHookFly;
	UnityResolve::UnityType::Transform* FlymanSmokeTrans;
	char vests[0x000004];
	UnityResolve::UnityType::GameObject* face;
	char MyRoleControl[0x000004];
	char MyRole[0x000004];
	UnityResolve::UnityType::GameObject* mBody;
	UnityResolve::UnityType::GameObject* carHit;
	bool isEffActive;
	char isEffActive_[0x000003];
	UnityResolve::UnityType::Transform* Spine;
	char originWeaponID[0x000004];
	UnityResolve::UnityType::Animator* animator;
	char roleSkinManager[0x000004];
	UnityResolve::UnityType::Animator* weapAnimator;
	char weaponEquip[0x000004];
	char weaponControl[0x000004];
	bool togglingIK;
	char togglingIK_[0x000003];
	float startIKWeight;
	float destIKWeight;
	float ikTweenTimer;
	int reloadState;
	int fireState;
	int meleeState;
	UnityResolve::UnityType::Vector3 initAimAxis;
	float fadeShootingTimer;
	bool isAimIK;
	bool isShiftingIK;
	bool isFadingShoot;
	char isFadingShoot_[0x000001];
	UnityResolve::UnityType::String* parachuteIndexStr;
	int parachuteIndex;
	UnityResolve::UnityType::String* parachuteAsyncStr;
	char myRoleParachute[0x000004];
	bool isLoadParachute;
	char isLoadParachute_[0x000003];
	UnityResolve::UnityType::Animator* parachute;
	bool isSyncParachute;
	char isSyncParachute_[0x000003];
	char FlyTweenPosition[0x000004];
	char mCommonAnimatorControl[0x000004];
	UnityResolve::UnityType::Transform* mFallowTarget;
	UnityResolve::UnityType::Transform* mJLSfallowTarget;
	UnityResolve::UnityType::Transform* OpenFireTrans;
	char CheckOcclusionTrans[0x000004];
	UnityResolve::UnityType::Transform* tigaStateRestTransform;
	UnityResolve::UnityType::Transform* tigaZepellionRayPoint;
	UnityResolve::UnityType::Transform* orbRayPoint;
	UnityResolve::UnityType::Transform* taigaRayPoint;
	UnityResolve::UnityType::Transform* xRayPoint;
	char punchList[0x000004];
	UnityResolve::UnityType::Transform* leftHandIKTrs;
	UnityResolve::UnityType::Transform* rightHandIKTrs;
	UnityResolve::UnityType::Vector3 leftHandIKPos;
	UnityResolve::UnityType::Vector3 rightHandIKPos;
	UnityResolve::UnityType::Quaternion leftHandIKRot;
	UnityResolve::UnityType::Quaternion rightHandIKRot;
	float ikWight;
	char animParameters[0x000004];
	UnityResolve::UnityType::Transform* bodySlot;
	char _RagdollControl_k__BackingField[0x000004];
	bool _isRagdollState_k__BackingField;
	char _isRagdollState_k__BackingField_[0x000003];
	char baseSkinManager[0x000004];
	char lowSkinManager[0x000004];
	char soUltraFightConfig[0x000004];
	char RoleAuxiliaryAimingMono[0x000004];
	bool _isClear;
	char _isClear_[0x000003];
	float checkParachuteDelay;
	bool IsAddLine;
	bool alreadyInitSpeedLine;
	char alreadyInitSpeedLine_[0x000002];
	float SpeedLineInitDelayTime;
	int meleeType;
	float _deployWeaponType;
	std::uint32_t openParachuteSound;
	float useCircusBall;
	float curWeaponIndex;
	float curWeaponEnum;
	bool _pickUp;
	bool isImmPutBackState;
	bool _IsAnimatorEnable_k__BackingField;
	bool isHideObj;
	float v_moveDir;
	float h_moveDir;
	float y_angleDiff;
	float y_camRot;
	float x_camRot;
	float _carHDir;
	float _carHCamRot;
	float _aimAngleV;
	float _userCarHDir;
	float _userCarHCamRot;
	bool isWeaponEmpty;
	bool ThrowGrenade;
	bool _isDance;
	bool weaponReleased;
	char weaponID[0x000004];
	float deployWeaponStandState;
	bool lastIsStanceChange;
	bool needMoveResetStance;
	char needMoveResetStance_[0x000002];
	float checkStanceTime;
	float syncAnimatorRotationY;
	UnityResolve::UnityType::Vector3 syncAnimatorRotation;
	bool togglingMoveCrouch;
	char togglingMoveCrouch_[0x000003];
	float crouchTweenTimer;
	float crouchTweenDuration;
	float destStance;
	float hideAlpha;
	char replaceAlphaMat[0x000004];
	char replaceHadesMat[0x000004];
	char replaceHideAndSeekMat[0x000004];
	char replaceTigaMat[0x000004];
	char replaceKittyMat[0x000004];
	char replaceKittyModelMat[0x000004];
	char replaceKaduraMat[0x000004];
	char listRenderers[0x000004];
	bool isTranslucent;
	char isTranslucent_[0x000003];
	char faces[0x000004];
	char playRoleEffect[0x000004];
	bool initRim;
	char initRim_[0x000003];
	char rimMPB[0x000004];
	float waitFarmPlayerTime;
	float recoverValue;
	float nextRecover;
	char MyBodyParts[0x000004];
	char MyBodyPartsBombCheck[0x000004];
	char MyRoleEffectParts[0x000004];
	char aimAssistParts[0x000004];
	bool m_upSkinInfo;
	char m_upSkinInfo_[0x000003];
	UnityResolve::UnityType::GameObject* swimEffect;
	float _nowSideValue;
	float _endSideValue;
	bool _isSideAnimEnd;
	char _isSideAnimEnd_[0x000003];
	float nowTopShoot;
	float endTopShoot;
	bool isTopShootEnd;
	char isTopShootEnd_[0x000003];
	UnityResolve::UnityType::Transform* catLocalSyncTrans;
	char catNeedHideTrans[0x000004];
	char curMatType[0x000004];
	char transNeedChangeMatGos[0x000004];
	char ResetMatEndEvent[0x000004];
	bool isShowWeaponSlot;
	char isShowWeaponSlot_[0x000003];
	char hadesHideingChangeActiveObj[0x000004];
	bool isCheckHidesChangeObj;
	char isCheckHidesChangeObj_[0x000003];
	char defaulMeshRenderer[0x000004];
	char defaultMesh[0x000004];
	char fashionPart[0x000058];
	char furs[0x000004];
	UnityResolve::UnityType::String* hookFlyEffStr;
	UnityResolve::UnityType::GameObject* hookFlyEffGo;
	char footballModeController[0x000004];
	char ultraFightModeController[0x000004];
	UnityResolve::UnityType::GameObject* readyGandaBurnEffect;
	UnityResolve::UnityType::GameObject* releaseGandaBurnEffect;
	std::uint32_t gandaBurnEffectSound;
	char readyGandaState[0x000001];
	bool lastIsReadyGandaBurn;
	char lastIsReleaseGandaBurn[0x000004];

};