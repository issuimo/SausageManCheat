#pragma once
#include "../../main.h"
#include "BulletSpeedAndGravity.h"
#include "UpRecoilInfo.h"

struct SOWeaponControl : II::UnityObject {

	bool IsNeedChangeEquipPoint;
	char IsNeedChangeEquipPoint_[0x000003];
	UnityResolve::UnityType::String* pickItemWeapon;
	UnityResolve::UnityType::String* pickItemBullet;
	bool IsUseBulletSkins;
	char IsUseBulletSkins_[0x000003];
	char magazines[0x000004];
	char stocks[0x000004];
	char upperRails[0x000004];
	char muzzles[0x000004];
	char lowerRails[0x000004];
	char chips[0x000004];
	char userMagazineList[0x000004];
	int maxPartsNum;
	char userEquipConfigs[0x000004];
	int BulletPower;
	char DistancePower[0x000004];
	float HeadDiffRatio;
	float ArmoredVestsHurtDiffRatio;
	float BulletAttackVehiclePower;
	char vehicleType[0x000004];
	float UpMinRecoil;
	float UpMaxRecoil;
	II::Array<UpRecoilInfo*>* UpRecoilInfo;
	float UpRecoilRecoverTime;
	float MaxLeftRightRecoil;
	float DownRecoilRatio;
	float RecoilRevertSpeed;
	float RecoilRevertSpeedRatio;
	float CrouchInfluenceUpRecoilRatio;
	float CrouchInfluenceMaxLeftRightRecoilRatio;
	float ProneInfluenceUpRecoilRatio;
	float ProneInfluenceMaxLeftRightRecoilRatio;
	float MaxShootRange;
	float MinShootRange;
	float LimitMinShootRange;
	float FireAddShootRange;
	float WepFirstShootCorrect;
	float AddShootRangeFireNum;
	float ShootRangeRecoveSpeed;
	float _StateShootRangeRecoveSpeed_k__BackingField;
	float _StateAddShootRangeSpeed_k__BackingField;
	bool HasAutoFire;
	bool HasAloneFire;
	char HasAloneFire_[0x000002];
	int SingleFireNum;
	char DefaultFireType[0x000004];
	int MyGunType;
	float HoldWeaponDelayTime;
	float FireDeployTime;
	float SeriesFireTime;
	float MinDownFireDelayTime;
	float MaxDelayTimeBulletNum;
	float FireNumDeployTime;
	float SingleFireHoldDeployTime;
	float SingleFireDeployTime;
	float FireNumDelay;
	float ReloadTime;
	float ReloadStartTime;
	float ReloadEndTime;
	float StartEjectTime;
	float BulletCaseEjectTime;
	float AimDownBaseTime;
	char AimDownCurve[0x000004];
	int BulletNum;
	II::Array<BulletSpeedAndGravity*>* bulletSpeedAndGravity;
	int PenetrationNum;
	bool CanUseBackpackBullet;
	char CanUseBackpackBullet_[0x000003];
	float fireMaxDistance;
	float bulletDelayClearTime;
	bool IsUseBulletHitBuff;
	char IsUseBulletHitBuff_[0x000003];
	UnityResolve::UnityType::String* SoHitBuff;
	int ShowHaloDistance;
	int FireBulletNum;
	char BulletDistanceRatios[0x000004];
	bool CanAiming;
	bool CanPlayIdleAiming;
	bool isWeaponCanSide;
	bool isWeaponCanTop;
	bool isWeaponCanCrouch;
	bool isWeaponCanProne;
	char isWeaponCanProne_[0x000002];
	char EquipPoint[0x000004];
	float CameraRatioLevel;
	int ZhunXing;
	bool ShowFireEffect;
	bool openGlassShowFireEffect;
	char openGlassShowFireEffect_[0x000002];
	UnityResolve::UnityType::String* weaponSound;
	bool isNeedPlayStopEvent;
	char isNeedPlayStopEvent_[0x000003];
	UnityResolve::UnityType::Vector3 WeaponPoint;
	UnityResolve::UnityType::Vector3 WeaponRotation;
	char weaponSlot1[0x000004];
	char weaponSlot2[0x000004];
	char backWeaponSlot1[0x000004];
	char backWeaponSlot2[0x000004];
	UnityResolve::UnityType::String* LocalTuoWeiEffect;
	UnityResolve::UnityType::String* FireEffectMove;
	float FireEffectMinSpeed;
	float FireEffectDiffAddSpeed;
	int ShowFireEffectDistance;
	float WeaponLength;
	float pressWeaponOffsetY;
	float AI_DistanceToRoleStartFire;
	float AI_DistanceToRoleStartFireBack;
	float AI_DistanceToRoleStartRunBack;
	float AI_FireToAIFindDistance;
	float AI_FireToAIAttack;
	int gunTooHotFireNum;
	float gunTooHotCoolTime;
	float preShootTime;
	float MinBulletSpeed;
	float HoldOnBowTime;
	float AutoFireDelayTime;
	float AutoFireCheckDistance;
	float AimassistCheckDistance;
	float StartAimBackTime;
	float AimBackTime;
	float AimBackArea;
	float AdsorptionStrengthX;
	float AdsorptionStrengthY;
	float DownSensitivity;
	float AdsorbTime;
	float HitRoleDownAdsorbRatioX;
	float HitRoleDownAdsorbRatioY;
	char FireSoundType[0x000004];
	float ChargeMaxTime;
	float MaxBulletRadius;
	float TailEffectDefaultScale;
	char FixedTrajectory[0x000004];
	bool IsInfiniteBullet;
	char IsInfiniteBullet_[0x000003];
	UnityResolve::UnityType::Vector3 hwFirePoint;
	float hwShootDelayTime;
	float hwShowModelTime;
	float hwThrowCd;
	float hwAutoThrowInterval;
	bool hwIsThrowHideModel;
	char hwIsThrowHideModel_[0x000003];
	float hwFullAttackTime;
	int hwRandomAttackAnimCount;
	bool hwIsHaveWeaponModel;
	char hwIsHaveWeaponModel_[0x000003];
	UnityResolve::UnityType::String* hwMuzzleEffectSign;
	UnityResolve::UnityType::Vector3 hwMuzzleEffectOffset;
	float hwEnterChargeTime;
	float hwChargeAnimTime;
	float HandleAdsorbEffectBaseDistance;
	float FireAdsorbSpeed1;
	float OpenAdsorbSpeed;
	float OpenAdsorbMaxTimeLimit;
	char myClock[0x000004];

};